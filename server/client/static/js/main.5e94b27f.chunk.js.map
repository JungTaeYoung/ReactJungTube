{"version":3,"sources":["components/CardBox/index.less","_actions/user_actions.js","_actions/types.js","components/Config.js","hoc/auth.js","hoc/useFetch.js","components/views/LandingPage/LandingPage.js","components/views/VideoPage/VideoPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/VideoUploadPage/VideoUploadPage.js","components/views/VideoDetailPage/Sections/SideVideo.js","components/views/VideoDetailPage/Sections/Subscribe.js","components/views/VideoDetailPage/Sections/LikeDislikes.js","components/views/VideoDetailPage/Sections/SingleComment.js","components/views/VideoDetailPage/Sections/ReplyComment.js","components/views/VideoDetailPage/Sections/Comment.js","components/views/VideoDetailPage/Sections/toTimeStr.js","components/views/VideoDetailPage/Sections/ProgressBar.js","components/views/VideoDetailPage/Sections/ControlBar.js","components/views/VideoDetailPage/Sections/Video.js","components/views/VideoDetailPage/VideoDetailPage.js","components/CardBox/index.js","components/ModalButton/index.js","components/views/MyPage/LoadMoreList.js","components/views/MyPage/MyPage.js","components/views/SubscriptionPage/SubscriptionPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/Sections/SearchBox.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/views/Layout/Layout.js","components/custom-route.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","_reducers/preferences_reducer.js","index.js"],"names":["module","exports","auth","type","payload","axios","get","then","response","data","myInfo","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","useFetch","querys","page","useState","Loading","setLoading","Error","setError","List","setList","HasMore","setHasMore","sendQuery","useCallback","a","variable","params","Axios","res","console","log","prev","Set","videos","length","LandingPage","match","location","useHistory","isVisibleText1","setisVisibleText1","Loadings","setLoadings","className","mode","delay","duration","style","fontSize","onEnd","setTimeout","key","leaveReverse","ease","loading","onClick","index","Meta","Typography","Title","Card","withRouter","search_query","queryString","parse","search","pageNum","setPageNum","observer","useRef","lastVideoElementRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","renderCards","map","video","isLastElement","minutes","Math","floor","seconds","lg","md","xs","ref","position","to","_id","width","src","thumbnail","avatar","writer","image","title","description","name","marginLeft","views","moment","createdAt","format","margin","marginBottom","gutter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","dataToSubmit","post","loginUser","loginSuccess","window","setItem","userId","id","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","level","Item","prefix","UserOutlined","color","placeholder","value","onChange","onBlur","LockOutlined","border","padding","borderRadius","checked","href","float","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastname","confirmPassword","oneOf","unix","registerUser","success","alert","errmsg","label","hasFeedback","validateStatus","TextArea","Input","PrivateOptions","CategoryOptions","VideoUploadPage","VideoTitle","setVideoTitle","Description","setDescription","Private","setPrivate","Category","setCategory","FilePath","setFilePath","Duration","setDuration","ThumbnailPath","setThumbnailPath","onSumit","e","preventDefault","variables","userData","privacy","filepath","category","message","sendEmail","emailjs","status","text","maxWidth","textAlign","display","justifyContent","onDrop","files","formData","FormData","append","url","fileName","fileDuration","multiple","maxSize","getRootProps","getInputProps","height","alignItems","PlusOutlined","alt","currentTarget","item","size","SideVideo","sideVideos","setsideVideos","renderSideVideo","marginRight","Fragment","marginTop","Subscribe","SubscribeNumber","setSubscribeNumber","Subscribed","setSubscribed","userTo","subscribeNumber","subscribedVarialbe","userFrom","subscribed","backgroundColor","fontWeight","textTransform","LikeDislikes","Likes","setLikes","Dislikes","setDislikes","LikeAction","setLikeAction","DislikeAction","setDislikeAction","videoId","commentId","likes","like","dislikes","dislike","onLike","onDislike","LikeOutlined","LikeFilled","paddingLeft","cursor","DislikeOutlined","DislikeFilled","SingleComment","OpenReply","setOpenReply","CommentValue","setCommentValue","content","postid","postId","responseTo","comment","refreshFunction","result","actions","author","ReplyComment","parentCommentId","ChildCommentNumber","setChildCommentNumber","OpenReplyComments","setOpenReplyComments","commentNumber","commentLists","Comment","commentValue","setcommentValue","toTimeStr","second","addZero","num","number","parseInt","ProgressBar","currentTime","totalTime","onTouchStart","onTouchEnd","onTouchMove","percent","max","step","onInput","onMouseDown","onMouseUp","controlBar","playIng","PauseOutlined","onPlayPauseClick","CaretRightOutlined","Video","PlayIng","setPlayIng","CurrentTime","setCurrentTime","TotalTime","setTotalTime","videoElem","timeUpdateOnOff","target","play","observedVideoElem","addEventListener","pause","timeUpdate","ControlBar","VideoDetailPage","VideoDetail","setVideoDetail","Comments","setComments","videoDetail","comments","subscriveButton","controls","newComment","concat","CardBox","children","ModalButton","LoadMoreList","getData","callback","reqwest","count","method","contentType","onLoadMore","setState","list","Array","dispatchEvent","Event","initLoading","this","loadMore","lineHeight","itemLayout","dataSource","renderItem","active","React","Component","MyPage","justify","user_date","SubscriptionPage","setVideo","subscriptionVariables","Menu","SubMenu","ItemGroup","LeftMenu","avatarMenu","useThemeSwitcher","switcher","currentTheme","themes","preferences","darkThemeEnabled","UserImage","setUserImage","undefined","theme","VideoCameraFilled","overlay","Search","SearchValue","setSearchValue","onSearch","event","enterButton","NavBar","visible","setVisible","isDrak","zIndex","AlignRightOutlined","placement","closable","onClose","drawerStyle","Footer","flexDirection","Content","Layout","Header","Sider","SubscribeInfos","setSubscribeInfos","users","fallback","overflow","left","paddingTop","minHeight","defaultSelectedKeys","defaultOpenKeys","borderRight","icon","HomeFilled","LaptopOutlined","CustomRoute","component","layout","rest","render","PureComponent","defaultProps","App","exact","path","Auth","VideoPage","LoginPage","Boolean","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","themeMap","dark","light","defaultTheme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e94b27f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/index.d41d8cd9.less\";","import axios from 'axios';\r\nimport {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n    MY_INFO\r\n} from './types';\r\nimport { USER_SERVER } from '../components/Config.js';\r\n\r\nexport function registerUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\r\n        .then(response => response.data);\r\n    \r\n    return {\r\n        type: REGISTER_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function loginUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\r\n                .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function auth(){\r\n    const request = axios.get(`${USER_SERVER}/auth`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: AUTH_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function logoutUser(){\r\n    const request = axios.get(`${USER_SERVER}/logout`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGOUT_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function myInfo(){ // \r\n    const request = axios.get(`${USER_SERVER}/myinfo`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: MY_INFO,\r\n        payload: request\r\n    }\r\n}\r\n\r\n","export const LOGIN_USER = 'login_user';\r\nexport const REGISTER_USER = 'register_user';\r\nexport const AUTH_USER = 'auth_user';\r\nexport const MY_INFO = 'my_info'; // 여기 탕비추가해주고\r\nexport const LOGOUT_USER = 'logout_user';\r\n\r\n\r\nexport const THEME_DATA = 'theme_data';\r\n","//SERVER ROUTES\r\nexport const USER_SERVER = '/api/users';\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth, myInfo } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            // 현재 내 로그인 상태 확인\r\n            dispatch(auth()).then(response => {\r\n                // 로그인 하지 않았을 때\r\n                if (!response.payload.isAuth) {\r\n                    // 로그인 전용 페이지 option 으로 구분\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    // 화면보기 가능\r\n                } else {\r\n                    // 어드민 전용 체크\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/videos')\r\n                    }\r\n                    // 로그인한 유저는 보면 안되는 페이지\r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.push('/videos')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            dispatch(myInfo())\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","import Axios from 'axios'\r\nimport React, { useState, useEffect, useCallback } from 'react'\r\n\r\n//페이지 로딩\r\nfunction useFetch(querys, page) {\r\n    const [Loading, setLoading] = useState(true);\r\n    const [Error, setError] = useState(false);\r\n    const [List, setList] = useState([]);\r\n    const [HasMore, setHasMore] = useState(false)\r\n\r\n    const sendQuery = useCallback(async () => {\r\n        try {\r\n            const variable = {\r\n                params: {\r\n                    querys,\r\n                    page\r\n                }\r\n            }\r\n            await setLoading(true);\r\n            await setError(false);\r\n            const res = await Axios.get('/api/video/getVideos', variable)\r\n            console.log(res)\r\n            await setList((prev) => [...new Set([...prev, ...res.data.videos])]); // 기존 리스트에 추가\r\n            await setHasMore(res.data.videos.length > 0);\r\n            setLoading(false);\r\n\r\n        } catch (e) {\r\n            console.log(\"오류남\")\r\n            setError(e)\r\n        }\r\n    },\r\n        [querys, page],\r\n    )\r\n    useEffect(() => {\r\n        sendQuery(querys)\r\n    }, [querys, sendQuery, page])\r\n\r\n    return { Loading, Error, List, HasMore }\r\n}\r\n\r\nexport default useFetch\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport useFetch from \"../../../hoc/useFetch\";\r\nimport { FaCode } from \"react-icons/fa\";\r\nimport { Button } from \"antd\";\r\nimport Texty from 'rc-texty';\r\nimport QueueAnim from 'rc-queue-anim';\r\nimport Axios from \"axios\";\r\nimport './LandingPage.css'\r\n\r\nfunction LandingPage({ match, location }) {\r\n    let history = useHistory();\r\n    const [isVisibleText1, setisVisibleText1] = useState(false)\r\n    const [Loadings, setLoadings] = useState([false])\r\n\r\n    const isVisibleText1Show = () => {\r\n        setTimeout(() => {\r\n\r\n            setisVisibleText1(true);\r\n        }, 3500)\r\n    }\r\n    const enterLoading = index => {\r\n        setLoadings({\r\n            ...Loadings,\r\n            [index]: true\r\n        })\r\n\r\n        setTimeout(() => {\r\n            setLoadings({\r\n                ...Loadings,\r\n                [index]: false\r\n            })\r\n            history.push(\"/videos\")\r\n        }, 2000);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"fullBox\">\r\n                <div className=\"fullCenter\">\r\n\r\n                    <Texty\r\n                        type=\"bottom\"\r\n                        mode=\"smooth\"\r\n\r\n                        delay={500}\r\n                        duration={500}\r\n                        style={{\r\n                            fontSize: '2.5rem'\r\n                        }}\r\n                    >\r\n                        안녕하세요.\r\n                    </Texty>\r\n                    <Texty\r\n                        type=\"bottom\"\r\n                        mode=\"smooth\"\r\n                        delay={2000}\r\n                        duration={500}\r\n                        style={{\r\n                            fontSize: '1.8rem'\r\n                        }}\r\n                    >\r\n                        제 React프로젝트에 와주셔서 감사합니다.\r\n                    </Texty>\r\n                    <Texty\r\n                        type=\"bottom\"\r\n                        mode=\"smooth\"\r\n                        delay={3500}\r\n                        duration={20}\r\n                        style={{\r\n                            fontSize: '0.8rem'\r\n                        }}\r\n                        onEnd={isVisibleText1Show}\r\n                    >\r\n                        본 프로젝트는 React and nodejs를 습득하기 위해 만들어졌습니다.\r\n                    </Texty>\r\n                    <div className={'buttonSize' + (isVisibleText1 ? ' active' : '')}>\r\n                        {\r\n                            isVisibleText1 ? <QueueAnim\r\n                                type=\"bottom\"\r\n                                delay={1000}\r\n                                duration={300}\r\n                                key=\"text\"\r\n                                leaveReverse\r\n                                ease={['easeOutCubic', 'easeInCubic']}\r\n                            >\r\n                                <Button loading={Loadings[0]} onClick={() => enterLoading(0)}>\r\n                                    Click me!\r\n                                </Button>\r\n                            </QueueAnim> : null\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport useFetch from \"../../../hoc/useFetch\";\r\nimport { FaCode } from \"react-icons/fa\";\r\nimport { Card, Icon, Avatar, Col, Typography, Row, Spin } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport queryString from \"query-string\";\r\nimport moment from \"moment\"\r\nimport { Link,withRouter } from \"react-router-dom\";\r\n\r\nconst { Title } = Typography;\r\nconst { Meta } = Card;\r\n\r\nfunction VideoPage({ match, location }) {\r\n    \r\n    const search_query = queryString.parse(location.search); // 검색어\r\n    const [query, setQuery] = useState(\"\");\r\n    const [pageNum, setPageNum] = useState(1);\r\n    const { Loading, Error, List, HasMore } = useFetch(search_query.search_query, pageNum);\r\n    const observer = useRef()\r\n    const lastVideoElementRef = useCallback(\r\n        (node) => {\r\n            if (Loading) return;\r\n            if (observer.current) observer.current.disconnect();\r\n            observer.current = new IntersectionObserver((entries) => {\r\n                if (entries[0].isIntersecting && HasMore) {\r\n                    setPageNum((prev) => prev + 1);\r\n                }\r\n            });\r\n            if (node) observer.current.observe(node);\r\n\r\n        },\r\n        [Loading, HasMore],\r\n    )\r\n\r\n    const [Video, setVideo] = useState([])\r\n\r\n    useEffect(() => {\r\n        setPageNum(1);\r\n        // Axios.get('/api/video/getVideos')\r\n        //     .then(response => {\r\n        //         if (response.data.success) {\r\n        //             console.log(response.data.videos)\r\n        //             setVideo(response.data.videos);\r\n\r\n        //         } else {\r\n        //             alert(\"비디오 가져오기 실패\")\r\n        //         }\r\n        //     })\r\n    }, [])\r\n\r\n    const renderCards = List.map((video, index) => {\r\n        const isLastElement = List.length === index + 1;\r\n        var minutes = Math.floor(video.duration / 60);\r\n        var seconds = Math.floor(video.duration - minutes * 60);\r\n        return (isLastElement ? (\r\n            <Col lg={6} md={8} xs={24} key={index} ref={lastVideoElementRef}>\r\n                <div style={{ position: \"relative\" }}>\r\n                    <Link to={`/video/${video._id}`}>\r\n                        <div style={{ position: 'relative' }}>\r\n                            <img style={{ width: '100%' }} src={`http://localhost:5000/${video.thumbnail}`} />\r\n                            <div className=\"duration\">\r\n                                <span>{minutes} : {seconds}</span>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                    <br />\r\n                    <Meta\r\n                        avatar={\r\n                            <Avatar src={video.writer.image}></Avatar>\r\n                        }\r\n                        title={video.title}\r\n                        description=\"\"\r\n                    />\r\n                    <span>{video.writer.name}</span><br />\r\n                    <span style={{ marginLeft: '3rem' }}>{video.views} views</span> - <span>{moment(video.createdAt).format(\"MMM Do YY\")}</span>\r\n                </div>\r\n            </Col>\r\n        ) : (\r\n            <Col lg={6} md={8} xs={24} key={index}>\r\n                <div style={{ position: \"relative\" }}>\r\n                    <Link to={`/video/${video._id}`}>\r\n                        <div style={{ position: 'relative' }}>\r\n                            <img style={{ width: '100%' }} src={`http://localhost:5000/${video.thumbnail}`} />\r\n                            <div className=\"duration\">\r\n                                <span>{minutes} : {seconds}</span>\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                    <br />\r\n                    <Meta\r\n                        avatar={\r\n                            <Avatar src={video.writer.image}></Avatar>\r\n                        }\r\n                        title={video.title}\r\n                        description=\"\"\r\n                    />\r\n                    <span>{video.writer.name}</span><br />\r\n                    <span style={{ marginLeft: '3rem' }}>{video.views} views</span> - <span>{moment(video.createdAt).format(\"MMM Do YY\")}</span>\r\n                </div>\r\n            </Col>\r\n        )\r\n        )\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Card className=\"mainTopText\" style={{ width: \"98%\", margin: \"1rem auto 4rem\" }}>\r\n                <p style={{ fontSize: '30px', marginBottom: '14px'}}>🎅</p>\r\n                <h2 className=\"title\">영상 저장소에 오신 걸 환영합니다.</h2>\r\n                <p className=\"description\">여러분들의 다양한 영상들을 공유해보세요. 이 모든게 무료입니다.</p>\r\n            </Card>\r\n            <div style={{ width: \"85%\", margin: \"3rem auto\" }}>\r\n                <Row gutter={[16, 48]}>\r\n                    {renderCards}\r\n                    {Loading && <Spin />}\r\n                    {Error && <Spin />}\r\n                </Row>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default withRouter(VideoPage);\r\n","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState('')\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe)\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: '',\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then(response => {\r\n              if (response.payload.loginSuccess) {\r\n                console.log(response.payload)\r\n                window.localStorage.setItem('userId', response.payload.userId);\r\n                window.localStorage.setItem('userFullName', response.payload.name);\r\n                window.localStorage.setItem('userImage', response.payload.image);\r\n                if (rememberMe === true) {\r\n                  window.localStorage.setItem('rememberMe', values.id);\r\n                } else {\r\n                  localStorage.removeItem('rememberMe');\r\n                }\r\n                props.history.push(\"/videos\");\r\n              } else {\r\n                setFormErrorMessage('Check out your Account or Password again')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              setFormErrorMessage('Check out your Account or Password again')\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\")\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n\r\n            <Title level={2}>Log In</Title>\r\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"email\"\r\n                  prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"password\"\r\n                  prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              {formErrorMessage && (\r\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\r\n              )}\r\n\r\n              <Form.Item>\r\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\r\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\r\n                  forgot password\r\n                  </a>\r\n                <div>\r\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\r\n                    Log in\r\n                </Button>\r\n                </div>\r\n                Or <a href=\"/register\">register now!</a>\r\n              </Form.Item>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginPage);\r\n\r\n\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n} from 'antd';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n\r\n    <Formik\r\n      initialValues={{\r\n        email: '',\r\n        lastname: '',\r\n        name: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        name: Yup.string()\r\n          .required('Name is required'),\r\n        lastname: Yup.string()\r\n          .required('Last Name is required'),\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 characters')\r\n          .required('Password is required'),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n          .required('Confirm Password is required')\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            name: values.name,\r\n            lastname: values.lastname,\r\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then(response => {\r\n            if (response.payload.success) {\r\n              props.history.push(\"/login\");\r\n            } else {\r\n              alert(response.payload.err.errmsg)\r\n            }\r\n          })\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {props => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <h2>Sign up</h2>\r\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\r\n\r\n              <Form.Item required label=\"Name\" >\r\n                <Input\r\n                  id=\"name\"\r\n                  placeholder=\"Enter your name\"\r\n                  type=\"text\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.name && touched.name && (\r\n                  <div className=\"input-feedback\">{errors.name}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Last Name\">\r\n                <Input\r\n                  id=\"lastname\"\r\n                  placeholder=\"Enter your Last Name\"\r\n                  type=\"text\"\r\n                  value={values.lastname}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.lastname && touched.lastname ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.lastname && touched.lastname && (\r\n                  <div className=\"input-feedback\">{errors.lastname}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'} >\r\n                <Input\r\n                  id=\"email\"\r\n                  placeholder=\"Enter your Email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\r\n                <Input\r\n                  id=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Confirm\" hasFeedback>\r\n                <Input\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Enter your confirmPassword\"\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\r\n                  }\r\n                />\r\n                {errors.confirmPassword && touched.confirmPassword && (\r\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailFormItemLayout}>\r\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\n\r\nexport default RegisterPage\r\n","import React, { useState } from \"react\";\r\nimport { Typography, Button, Form, message, Input, Select } from \"antd\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport Axios from \"axios\";\r\nimport { useSelector } from 'react-redux'\r\nimport * as emailjs from 'emailjs-com';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nconst { TextArea } = Input;\r\nconst { Title } = Typography;\r\n\r\nconst PrivateOptions = [\r\n  { value: 0, label: \"Private\" },\r\n  { value: 1, label: \"Public\" },\r\n];\r\n\r\nconst CategoryOptions = [\r\n  { value: 0, label: \"list1\" },\r\n  { value: 1, label: \"list2\" },\r\n  { value: 2, label: \"list3\" },\r\n  { value: 3, label: \"list4\" },\r\n];\r\n\r\nfunction VideoUploadPage(props) {\r\n  const user = useSelector(state => state.user)\r\n  const [VideoTitle, setVideoTitle] = useState(\"\");\r\n  const [Description, setDescription] = useState(\"\");\r\n  const [Private, setPrivate] = useState(0);\r\n  const [Category, setCategory] = useState(\"list1\");\r\n\r\n  const [FilePath, setFilePath] = useState(\"\");\r\n  const [Duration, setDuration] = useState(\"\");\r\n  const [ThumbnailPath, setThumbnailPath] = useState(\"\");\r\n\r\n  const onVideoTitleChange = (e) => {\r\n    setVideoTitle(e.currentTarget.value);\r\n  };\r\n  const onDescriptionChange = (e) => {\r\n    setDescription(e.currentTarget.value);\r\n  };\r\n  const onPrivateChange = (e) => {\r\n    setPrivate(e.currentTarget.value);\r\n  };\r\n  const onCategoryChange = (e) => {\r\n    setCategory(e.currentTarget.value);\r\n  };\r\n  const onDrop = (files) => {\r\n    let formData = new FormData();\r\n    const config = { \"content-type\": \"multipart/form-data\" };\r\n    console.log(files[0])\r\n    formData.append(\"file\", files[0]);\r\n    Axios.post(\"/api/video/uploadfiles\", formData, config).then((response) => {\r\n      if (response.data.success) {\r\n        console.log(response.data);\r\n\r\n        let variable = {\r\n          url: response.data.url,\r\n          fileName: response.data.fileName,\r\n        };\r\n        setFilePath(response.data.url);\r\n        Axios.post(\"/api/video/thumbnail\", variable).then((response) => {\r\n          if (response.data.success) {\r\n            Axios.post(\"/api/video/transcoding \", variable).then((response) => {\r\n              if (response.data.success) {\r\n\r\n              } else {\r\n                alert(\"인코딩 변환불가\");\r\n              }\r\n            });\r\n            setDuration(response.data.fileDuration);\r\n            setThumbnailPath(response.data.url);\r\n          } else {\r\n            alert(\"thumbnail create error\");\r\n          }\r\n        });\r\n\r\n\r\n      } else {\r\n        console.log(response.data);\r\n        alert(\"video uplaod error\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const onSumit = (e) => {\r\n    e.preventDefault();\r\n\r\n    let variables = {\r\n      writer: user.userData._id,\r\n      title: VideoTitle,\r\n      description: Description,\r\n      privacy: Private,\r\n      filepath: FilePath,\r\n      category: Category,\r\n      duration: Duration,\r\n      thumbnail: ThumbnailPath,\r\n    }\r\n\r\n    Axios.post('/api/video/videoUpload', variables)\r\n      .then(response => {\r\n        console.log(333)\r\n        console.log(variables)\r\n        if (response.data.success) {\r\n          message.success('성공적으로 업로드를 했습니다.')\r\n          setTimeout(() => {\r\n            sendEmail();\r\n            props.history.push('/videos')\r\n          }, 3000);\r\n          console.log(response.data)\r\n        } else {\r\n          alert('비디오 업로드 실패')\r\n        }\r\n      })\r\n\r\n\r\n  }\r\n\r\n  const sendEmail = () => {\r\n    let data = {\r\n      'from_name': '정태영',\r\n      'to_name': '정지현',\r\n      'to_email': 'xodud5621@naver.com,young1114@mirimmedialab.co.kr',\r\n      'message': '테스트이메일 전송'\r\n    }\r\n    emailjs.send(\"service_a5jtukj\", \"template_sx3l576\", data, \"user_mE91XoyRtqTMPe6LxLxuE\").then(\r\n      function (response) {\r\n        console.log(response.status, response.text);\r\n      },\r\n      function (err) {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"700px\", margin: \"2rem auto\" }}>\r\n      <div style={{ textAlign: \"center\", marginBottom: \"2rem\" }}>\r\n        <Title level={2}>Upload Page</Title>\r\n      </div>\r\n      <Form onSubmit={onSumit}>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          {/* 드롭 영역 */}\r\n          <Dropzone onDrop={onDrop} multiple={false} maxSize={100000000}>\r\n            {({ getRootProps, getInputProps }) => (\r\n              <div\r\n                style={{\r\n                  width: \"300px\",\r\n                  height: \"240px\",\r\n                  display: \"flex\",\r\n                  border: \"1px solid lightgray\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  textAlign: \"center\",\r\n                }}\r\n                {...getRootProps()}\r\n              >\r\n                <input {...getInputProps()} />\r\n                <PlusOutlined />\r\n                {/* <Icon type=\"plus\" style={{ fontSize: \"3rem\" }} /> */}\r\n              </div>\r\n            )}\r\n          </Dropzone>\r\n          {/* 썸네일 영역 */}\r\n          {ThumbnailPath && (\r\n            <div>\r\n              <img\r\n                src={`http://localhost:5000/${ThumbnailPath}`}\r\n                alt=\"thumbnail\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <br />\r\n        <br />\r\n        <label>Title</label>\r\n        <Input onChange={onVideoTitleChange} value={VideoTitle} />\r\n        <br />\r\n        <br />\r\n        <label>Description</label>\r\n        <TextArea onChange={onDescriptionChange} value={Description} />\r\n        <select onChange={onPrivateChange}>\r\n          {PrivateOptions.map((item, index) => (\r\n            <option key={index} value={item.value}>\r\n              {item.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <select onChange={onCategoryChange}>\r\n          {CategoryOptions.map((item, index) => (\r\n            <option key={index} value={item.value}>\r\n              {item.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <Button type=\"primary\" size=\"large\" onClick={onSumit}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoUploadPage;","import React, { useEffect, useState } from 'react'\r\nimport Axios from \"axios\";\r\n\r\nfunction SideVideo() {\r\n\r\n    const [sideVideos, setsideVideos] = useState([])\r\n\r\n    useEffect(() => {\r\n        Axios.get('/api/video/getVideos')\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    console.log(response.data.videos)\r\n                    setsideVideos(response.data.videos);\r\n\r\n                } else {\r\n                    alert(\"비디오 가져오기 실패\")\r\n                }\r\n            })\r\n    }, [])\r\n\r\n\r\n    const renderSideVideo = sideVideos.map((video, index) => {\r\n        var minutes = Math.floor(video.duration / 60);\r\n        var seconds = Math.floor(video.duration - minutes * 60);\r\n\r\n        return <div key={index} style={{ display: 'flex', marginBottom: '1rem', padding: '0 2rem' }}>\r\n            <div style={{ width: '40%', marginRight: '1rem' }}>\r\n                <a href>\r\n                    <img style={{ width: '100%', height: '100%' }} src={`http://localhost:5000/${video.thumbnail}`} alt />\r\n                </a>\r\n            </div>\r\n\r\n            <div style={{ width: '50%' }}>\r\n                <a href style={{ color:'gray' }}>\r\n                    <span style={{ fontSize: '1rem', color: 'black' }}>{video.title}</span><br />\r\n                    <span>{video.writer.name}</span><br />\r\n                    <span>{video.views}</span><br />\r\n                    <span>{minutes} : {seconds}</span>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    })\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{ marginTop: '3rem' }}></div>\r\n            {renderSideVideo}\r\n        </React.Fragment>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default SideVideo\r\n","import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nfunction Subscribe(props) {\r\n\r\n    const [SubscribeNumber, setSubscribeNumber] = useState(0)\r\n    const [Subscribed, setSubscribed] = useState(false)\r\n    useEffect(() => {\r\n\r\n        let variable = { userTo: props.userTo }\r\n\r\n        Axios.post('/api/subscribe/subscribeNumber', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setSubscribeNumber(response.data.subscribeNumber)\r\n                } else {\r\n                    alert('구독자 수 정보를 받아오지 못했습니다.')\r\n                }\r\n            })\r\n\r\n        let subscribedVarialbe = { userTo: props.userTo, userFrom: localStorage.getItem('userId') }\r\n        Axios.post('/api/subscribe/subscribed', subscribedVarialbe)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setSubscribed(response.data.subscribed)\r\n                } else {\r\n                    alert('정보를 받아오지 못했습니다.')\r\n                }\r\n            })\r\n\r\n    }, [])\r\n\r\n    const onSubscribe = () => {\r\n        let subscribedVarialbe = { userTo: props.userTo, userFrom: localStorage.getItem('userId') }\r\n        if(Subscribed) {\r\n            //구독중\r\n            Axios.post('/api/subscribe/unSubscribe', subscribedVarialbe)\r\n                .then(response => {\r\n                    if(response.data.success) {\r\n                        setSubscribeNumber(SubscribeNumber - 1)\r\n                        setSubscribed(!Subscribed)\r\n                    } else {\r\n                        alert('구독 취소 하는데 실패 했습니다.')\r\n                    }\r\n                })\r\n        } else {\r\n            //미구독중\r\n            Axios.post('/api/subscribe/subscribe', subscribedVarialbe)\r\n                .then(response => {\r\n                    if(response.data.success) {\r\n                        setSubscribeNumber(SubscribeNumber + 1)\r\n                        setSubscribed(!Subscribed)\r\n                    } else {\r\n                        alert('구독 하는데 실패 했습니다.')\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                style={{\r\n                    backgroundColor: `${Subscribed ? '#AAAAAA' : \"#CC0000\"}`, borderRadius: '4px',\r\n                    color: 'white', padding: '10px 16px',\r\n                    fontWeight: '500', fontSize: '1rem', textTransform: 'uppercase'\r\n                }}\r\n                onClick={onSubscribe}\r\n            >\r\n                {SubscribeNumber} {Subscribed ? 'Subscribed' : 'Subscribe'}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subscribe\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Tooltip, Icon } from 'antd'\r\nimport Axios from 'axios'\r\nimport { LikeOutlined, LikeFilled, DislikeOutlined, DislikeFilled } from '@ant-design/icons';\r\n\r\n\r\nfunction LikeDislikes(props) {\r\n    const [Likes, setLikes] = useState(0)\r\n    const [Dislikes, setDislikes] = useState(0)\r\n    const [LikeAction, setLikeAction] = useState(null)\r\n    const [DislikeAction, setDislikeAction] = useState(null)\r\n    let variable = {}\r\n    if (props.video) {\r\n        variable = { videoId: props.videoId, userId: props.userId }\r\n    } else {\r\n        variable = { commentId: props.commentId, userId: props.userId }\r\n    }\r\n    useEffect(() => {\r\n        Axios.post('/api/like/getLikes', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    // 좋아요받은 수\r\n                    setLikes(response.data.likes.length)\r\n                    // 이미 좋아요 누른지\r\n                    response.data.likes.map(like => {\r\n                        if (like.userId === props.userId) {\r\n                            setLikeAction('liked')\r\n                        }\r\n                    })\r\n                } else {\r\n                    alert(\"Likes에 정보를 가져오지 못했습니다.\")\r\n                }\r\n            })\r\n\r\n        Axios.post('/api/like/getDislikes', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    //싫어요받은 수\r\n                    setDislikes(response.data.dislikes.length)\r\n                    // 이미 좋아요 누른지\r\n                    response.data.dislikes.map(dislike => {\r\n                        if (dislike.userId === props.userId) {\r\n                            setDislikeAction('disliked')\r\n                        }\r\n                    })\r\n                } else {\r\n                    alert(\"DisLikes에 정보를 가져오지 못했습니다.\")\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    const onLike = () => {\r\n        if (LikeAction === null) {\r\n            Axios.post('/api/like/upLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setLikes(Likes + 1)\r\n                        setLikeAction('liked')\r\n                        if (DislikeAction !== null) {\r\n                            setDislikes(Dislikes - 1)\r\n                            setDislikeAction(null)\r\n                        }\r\n                    } else {\r\n                        alert('Like를 올리지 못했습니다.')\r\n                    }\r\n                })\r\n        } else {\r\n            Axios.post('/api/like/unLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setLikes(Likes - 1)\r\n                        setLikeAction(null)\r\n                    } else {\r\n                        alert('Like를 내리지 못했습니다.')\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    const onDislike = () => {\r\n        if (DislikeAction === null) {\r\n            Axios.post('/api/like/upDislike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setDislikes(Dislikes + 1)\r\n                        setDislikeAction('disliked')\r\n                        if (LikeAction !== null) {\r\n                            setLikes(Likes - 1)\r\n                            setLikeAction(null)\r\n                        }\r\n                    } else {\r\n                        alert('Like를 올리지 못했습니다.')\r\n                    }\r\n                })\r\n        } else {\r\n            Axios.post('/api/like/unDislike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setDislikes(Dislikes - 1)\r\n                        setDislikeAction(null)\r\n                    } else {\r\n                        alert('Like를 내리지 못했습니다.')\r\n                    }\r\n                })\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <span key=\"comment-basic-like\">\r\n                <Tooltip title=\"Like\">\r\n                    {LikeAction === 'liked' ? <LikeOutlined onClick={onLike} /> : <LikeFilled onClick={onLike} />}\r\n                    {/* <Icon type=\"like\"\r\n                        theme={LikeAction === 'liked' ? 'filled' : 'outlined'}\r\n                        onClick={onLike}\r\n\r\n                    /> */}\r\n                </Tooltip>\r\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}>{Likes}</span>\r\n            </span>\r\n            <span key=\"comment-basic-dislike\">\r\n                <Tooltip title=\"Dislike\">\r\n                    {DislikeAction === 'disliked' ? <DislikeOutlined onClick={onDislike} /> : <DislikeFilled onClick={onDislike} />}\r\n                    {/* <Icon type=\"dislike\"\r\n                        theme={DislikeAction === 'disliked' ? 'filled' : 'outlined'}\r\n                        onClick={onDislike}\r\n\r\n                    /> */}\r\n                </Tooltip>\r\n                <span style={{ paddingLeft: '8px', cursor: 'auto' }}>{Dislikes}</span>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LikeDislikes\r\n","import Axios from 'axios';\r\nimport React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { Comment, Avatar, Button, Input } from 'antd';\r\nimport { set } from 'mongoose';\r\nimport LikeDislikes from './LikeDislikes';\r\nfunction SingleComment(props) {\r\n    const user = useSelector(state => state.user)\r\n    const [OpenReply, setOpenReply] = useState(false)\r\n    const [CommentValue, setCommentValue] = useState(\"\")\r\n\r\n    const onClickReplyOpen = () => {\r\n        setOpenReply(!OpenReply)\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        const variables = {\r\n            content: CommentValue,\r\n            writer: user.userData._id,\r\n            postid: props.postId,\r\n            responseTo: props.comment._id\r\n        }\r\n\r\n        Axios.post('/api/comment/saveComment', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setCommentValue(\"\")\r\n                    setOpenReply(false);\r\n                    props.refreshFunction(response.data.result)\r\n                } else {\r\n                    alert('커멘트를 저장하지 못했습니다.')\r\n                }\r\n            })\r\n    }\r\n    const onHandleChange = (e) => {\r\n        setCommentValue(e.currentTarget.value)\r\n    }\r\n    const actions = [\r\n        <LikeDislikes userId={localStorage.getItem('userId')} commentId={props.comment._id} />,\r\n        <span onClick={onClickReplyOpen} key=\"comment-basic-reply-to\">Reply to</span>\r\n    ]\r\n\r\n    return (\r\n        <div>\r\n            <Comment\r\n                actions={actions}\r\n                author={props.comment.writer.name}\r\n                avatar={<Avatar src={props.comment.writer.image} alt />}\r\n                content={<p>{props.comment.content}</p>}\r\n            />\r\n            {OpenReply && <form style={{ display: 'flex' }} onSubmit={onSubmit}>\r\n                <textarea\r\n                    style={{ width: '100%', borderRadius: '5px' }}\r\n                    onChange={onHandleChange}\r\n                    value={CommentValue}\r\n                    placeholder=\"코멘트를 작성해 주세요\"\r\n                />\r\n                <br />\r\n                <button style={{ width: '20%', height: '52px' }} onClick={onSubmit}>Submit</button>\r\n            </form>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComment\r\n","import { PropertySafetyFilled } from '@ant-design/icons';\r\nimport React, { useEffect, useState } from 'react'\r\nimport SingleComment from './SingleComment'\r\n\r\n\r\nfunction ReplyComment(props) {\r\n\r\n    const [ChildCommentNumber, setChildCommentNumber] = useState(0)\r\n    const [OpenReplyComments, setOpenReplyComments] = useState(true)\r\n\r\n    useEffect(() => {\r\n\r\n        let commentNumber = 0;\r\n        props.commentLists.map((comment) => {\r\n            if (comment.responseTo == props.parentCommentId) {\r\n                commentNumber++\r\n            }\r\n        })\r\n        setChildCommentNumber(commentNumber)\r\n\r\n    }, [props.commentLists])\r\n    const renderReplyComment = (parentCommentId) => (\r\n        props.commentLists.map((comment, index) => (\r\n\r\n            <React.Fragment>\r\n                {comment.responseTo === parentCommentId &&\r\n                    (<div style={{ width: '80%', marginLeft: '40px' }}>\r\n                        <SingleComment refreshFunction={props.refreshFunction} comment={comment} postId={props.postId} />\r\n                        <ReplyComment refreshFunction={props.refreshFunction} parentCommentId={comment._id} postId={props.postId} commentLists={props.commentLists} />\r\n                    </div>)\r\n                }\r\n            </React.Fragment>\r\n        ))\r\n    )\r\n    const onHandleChange = () => {\r\n        setOpenReplyComments(!OpenReplyComments)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {ChildCommentNumber > 0 &&\r\n                <p style={{ fontSize: '14px', margin: 0, color: 'gray' }} onClick={onHandleChange}>\r\n                    View {ChildCommentNumber} more comment(s)\r\n            </p>\r\n\r\n            }\r\n\r\n            {OpenReplyComments &&\r\n                renderReplyComment(props.parentCommentId)\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ReplyComment\r\n","import Axios from 'axios';\r\nimport React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport SingleComment from './SingleComment'\r\nimport ReplyComment from './ReplyComment'\r\n\r\n\r\n\r\nfunction Comment(props) {\r\n    const videoId = props.postId\r\n    console.log(videoId)\r\n    const user = useSelector(state => state.user)\r\n    const [commentValue, setcommentValue] = useState(\"\");\r\n\r\n    const handleClick = (e) => {\r\n        setcommentValue(e.currentTarget.value)\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const variables = {\r\n            content: commentValue,\r\n            writer: user.userData._id,\r\n            postid: videoId\r\n        }\r\n\r\n        Axios.post('/api/comment/saveComment', variables)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setcommentValue(\"\")\r\n                    props.refreshFunction(response.data.result)\r\n                } else {\r\n                    alert('커멘트를 저장하지 못했습니다.')\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br />\r\n            <p>Replies</p>\r\n            <hr />\r\n\r\n            {/* Comment List */}\r\n\r\n            {props.commentLists && props.commentLists.map((comment, index) => {\r\n                return (!comment.responseTo &&\r\n                    <React.Fragment>\r\n                        <SingleComment refreshFunction={props.refreshFunction} comment={comment} postId={videoId} />\r\n                        <ReplyComment refreshFunction={props.refreshFunction} parentCommentId={comment._id} postId={videoId} commentLists={props.commentLists} />\r\n                    </React.Fragment>\r\n                )\r\n            })}\r\n\r\n\r\n            {/* Root Comment Form */}\r\n\r\n            <form style={{ display: 'flex' }} onSubmit={onSubmit}>\r\n                <textarea\r\n                    style={{ width: '100%', borderRadius: '5px' }}\r\n                    onChange={handleClick}\r\n                    value={commentValue}\r\n                    placeholder=\"코멘트를 작성해 주세요\"\r\n                />\r\n                <br />\r\n                <button style={{ width: '20%', height: '52px' }} onClick>Submit</button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment\r\n","\r\n// 초를 받아 분 초로 제공\r\nconst toTimeStr = (second) => {\r\n    const addZero = (num) => {\r\n        let number = parseInt(num);\r\n        // 10이하 0붙이기\r\n        return number < 10 ? \"0\" + number : number;\r\n    }\r\n    let minutes = Math.floor(second / 60);\r\n    let seconds = Math.floor(second - minutes * 60);\r\n    return (addZero(minutes)) + \":\" + (addZero(seconds))\r\n}\r\n\r\nexport default toTimeStr;","import React from 'react'\r\n\r\nfunction ProgressBar({ currentTime, totalTime, onTouchStart, onChange, onTouchMove, onTouchEnd }) {\r\n    const percent = ((currentTime / totalTime || 0) * 100)\r\n    return (\r\n        <div className=\"progressBar\">\r\n            <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                value={percent}\r\n                step=\"0.01\"\r\n                onInput={onChange}\r\n                onChange={onChange}\r\n                onMouseDown={onTouchStart}\r\n                onMouseUp={onTouchEnd}\r\n            // ontouchend={onchange.bind(this)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar\r\n","import React from 'react'\r\nimport toTimeStr from './toTimeStr'\r\nimport { CaretRightOutlined, PauseOutlined } from '@ant-design/icons';\r\nimport ProgressBar from './ProgressBar';\r\nimport './video.css'\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction controlBar(props) {\r\n    return (\r\n        <div className=\"controlBox\">\r\n            <div className=\"controlBar\">\r\n                <ProgressBar\r\n                    // onchange={onChange}\r\n                    totalTime={props.totalTime}\r\n                    currentTime={props.currentTime}\r\n                    onTouchStart={props.onTouchStart}\r\n                    onTouchEnd={props.onTouchEnd}\r\n                    onChange={props.onChange}\r\n                    // onTouchEnd={props.onTouchEnd}\r\n                />\r\n                {!props.playIng ? <CaretRightOutlined onClick={props.onPlayPauseClick} /> : <PauseOutlined onClick={props.onPlayPauseClick} />}\r\n\r\n                <div className=\"times\">\r\n                    <span>{toTimeStr(props.currentTime)}</span>/\r\n                    <span>{toTimeStr(props.totalTime)}</span>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default controlBar\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport ControlBar from './ControlBar';\r\n\r\n\r\n\r\nfunction Video(props) {\r\n    const [PlayIng, setPlayIng] = useState(true) // 영상 재생 유무\r\n    const [CurrentTime, setCurrentTime] = useState(0)\r\n    const [TotalTime, setTotalTime] = useState(0)\r\n    const ref = useRef(null);\r\n    let videoElem = ref && ref.current;\r\n\r\n    let timeUpdateOnOff = true;\r\n    const timeUpdate = () => {\r\n        const observedVideoElem = ref && ref.current;\r\n        if (observedVideoElem) {\r\n            observedVideoElem.addEventListener(\"loadedmetadata\", () => {\r\n                setTotalTime((ref && ref.current && ref.current.duration) || 0)\r\n            })\r\n            observedVideoElem.addEventListener(\"timeupdate\", () => {\r\n                if (timeUpdateOnOff) {\r\n                    setCurrentTime(observedVideoElem.currentTime)\r\n                }\r\n            })\r\n            setPlayIng(false);\r\n            observedVideoElem.pause();\r\n        }\r\n    }\r\n\r\n    const onPlayPauseClick = () => {\r\n        if (videoElem) {\r\n            if (PlayIng) {\r\n                setPlayIng(false)\r\n                videoElem.pause()\r\n            } else {\r\n                setPlayIng(true)\r\n                videoElem.play()\r\n            }\r\n        }\r\n    }\r\n\r\n    const onTouchStart = (e) => {\r\n        timeUpdateOnOff = false;\r\n        if (videoElem) {\r\n            videoElem.pause();\r\n            setPlayIng(false);\r\n        }\r\n\r\n    }\r\n\r\n    const onTouchEnd = async (e) => {\r\n        // 컨트롤바 드래그 끝\r\n        console.log(\"onTouchEnd\" + e.target.value)\r\n        try {\r\n            videoElem.play();\r\n        } catch(e) {\r\n            setTimeout(()=>{\r\n                videoElem.play();\r\n            },10)\r\n        }\r\n        timeUpdateOnOff = true;\r\n        setPlayIng(true);\r\n    }\r\n    \r\n    const onChange = (e) => {\r\n        console.log(\"onChange\")\r\n        // 컨트롤바 체인지 이벤트\r\n\r\n        console.log(e.target.value / 100 * TotalTime)\r\n        videoElem.currentTime = e.target.value / 100 * TotalTime;\r\n        setCurrentTime(e.target.value / 100 * TotalTime)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"ref.current.duration\" + ref.current.duration)\r\n\r\n        timeUpdate();\r\n        //최소 실행\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"MPlayer\">\r\n            <video style={{ width: '100%' }}\r\n                ref={ref}\r\n            >\r\n                <source src={props.src}></source>\r\n            </video>\r\n            <ControlBar\r\n                playIng={PlayIng} // 재생유무\r\n                currentTime={CurrentTime} // 현재시간\r\n                onPlayPauseClick={onPlayPauseClick} // /재생/정지\r\n                onTouchStart={onTouchStart}\r\n                onTouchEnd={onTouchEnd}\r\n                onChange={onChange}\r\n                totalTime={TotalTime} // 최종시간\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Video\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, List, Avatar } from 'antd'\r\nimport Axios from 'axios'\r\nimport SideVideo from './Sections/SideVideo'\r\nimport Subscribe from './Sections/Subscribe'\r\nimport Comment from './Sections/Comment'\r\nimport LikeDislikes from './Sections/LikeDislikes'\r\nimport Video from './Sections/Video'\r\n\r\nfunction VideoDetailPage(props) {\r\n\r\n    const videoId = props.match.params.videoId\r\n    const variable = {\r\n        videoId\r\n\r\n    }\r\n\r\n    const [VideoDetail, setVideoDetail] = useState([])\r\n    const [Comments, setComments] = useState([])\r\n\r\n    useEffect(() => {\r\n        Axios.post('/api/video/getVideoDetail', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    console.log(response.data.videoDetail.writer.image)\r\n                    setVideoDetail(response.data.videoDetail)\r\n\r\n                } else {\r\n                    alert('비디오 가져오기를 실패 하였습니다.')\r\n                }\r\n            })\r\n\r\n\r\n        Axios.post('/api/comment/getComments', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setComments(response.data.comments)\r\n                } else {\r\n                    alert(\"코멘트 정보를 가져오는 것을 실패 하였습니다.\")\r\n                }\r\n            })\r\n    }, [])\r\n\r\n\r\n    const refreshFunction = (newComment) => {\r\n        setComments(Comments.concat(newComment))\r\n\r\n    }\r\n    if (VideoDetail.writer) {\r\n\r\n\r\n        const subscriveButton = VideoDetail.writer._id !== localStorage.getItem('userId') && <Subscribe userTo={VideoDetail.writer._id} />\r\n\r\n        return (\r\n            <Row gutter={[16, 16]}>\r\n                <Col lg={18} xs={24}>\r\n                    <div style={{ width: '100%', padding: '3rem 4rem' }}>\r\n                        <Video \r\n                            \r\n                            style={{ width: '100%' }}\r\n                            src={`http://localhost:5000/${VideoDetail.filepath}`}\r\n                            controls={false}\r\n                        />\r\n                        <List.Item\r\n                            actions={[<LikeDislikes video userId={localStorage.getItem('userId')} videoId={videoId} />, subscriveButton]}\r\n                        >\r\n                            <List.Item.Meta\r\n                                avatar={<Avatar src={VideoDetail.writer.image} />}\r\n                                title={VideoDetail.writer.name}\r\n                                description={VideoDetail.description}\r\n                            />\r\n                        </List.Item>\r\n                        <Comment refreshFunction={refreshFunction} commentLists={Comments} postId={videoId} />\r\n                    </div>\r\n                </Col>\r\n                <Col lg={6} xs={24}>\r\n                    <SideVideo />\r\n                </Col>\r\n            </Row>\r\n        )\r\n    } else {\r\n        return <div>...loading</div>\r\n    }\r\n}\r\n\r\nexport default VideoDetailPage\r\n","import React from 'react'\r\nimport { Card } from 'antd'\r\nimport './index.less'\r\n\r\n\r\nfunction CardBox(props) {\r\n    return (\r\n        <Card className={props.className} title={props.title}>\r\n            {props.children}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default CardBox\r\n","\r\nimport React, { useState } from 'react'\r\nimport { Modal, Button } from 'antd';\r\n\r\nfunction ModalButton(props) {\r\n    const [visible, setvisible] = useState(false);\r\n    const showModal = () => {\r\n        setvisible(true)\r\n    };\r\n\r\n    const hideModal = () => {\r\n        setvisible(false)\r\n    };\r\n\r\n    const okClick = () => {\r\n        props.onOk() // 부모에서 받오는 실행함수\r\n        hideModal()\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button type=\"primary\" onClick={showModal}>\r\n                {props.children}\r\n            </Button>\r\n            <Modal\r\n                title={props.title}\r\n                visible={visible}\r\n                onOk={hideModal}\r\n                onCancel={hideModal}\r\n                okText=\"확인\"\r\n                cancelText=\"취소\"\r\n                onOk={okClick}\r\n            >\r\n                {props.modalData}\r\n            </Modal>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default ModalButton\r\n","import React from \"react\";\r\nimport { List, Avatar, Button, Skeleton } from 'antd';\r\n\r\nimport reqwest from 'reqwest';\r\n\r\n// const fakeDataUrl = `https://randomuser.me/api/?results=${count}&inc=name,gender,email,nat&noinfo`;\r\n\r\nlet page = 1;\r\n\r\nclass LoadMoreList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            initLoading: true,\r\n            loading: false,\r\n            data: [],\r\n            list: [],\r\n        };\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData(res => {\r\n            this.setState({\r\n                initLoading: false,\r\n                data: res.videos,\r\n                list: res.videos,\r\n            });\r\n        });\r\n    }\r\n\r\n    getData = callback => {\r\n        reqwest({\r\n            url: `/api/video/getMyVideos?count=${this.props.count}&page=${page}`,\r\n            type: 'json',\r\n            method: 'get',\r\n            contentType: 'application/json',\r\n            success: res => {\r\n                callback(res);\r\n            },\r\n        });\r\n    };\r\n\r\n    onLoadMore = () => {\r\n        page += 1;\r\n        this.setState({\r\n            loading: true,\r\n            list: this.state.data.concat([...new Array(this.props.count)].map(() => ({ loading: true, name: {} }))),\r\n        });\r\n        this.getData(res => {\r\n            const data = this.state.data.concat(res.videos);\r\n            this.setState(\r\n                {\r\n                    data,\r\n                    list: data,\r\n                    loading: false,\r\n                },\r\n                () => {\r\n                    // Resetting window's offsetTop so as to display react-virtualized demo underfloor.\r\n                    // In real scene, you can using public method of react-virtualized:\r\n                    // https://stackoverflow.com/questions/46700726/how-to-use-public-method-updateposition-of-react-virtualized\r\n                    window.dispatchEvent(new Event('resize'));\r\n                },\r\n            );\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { initLoading, loading, list } = this.state;\r\n        const loadMore =\r\n            !initLoading && !loading ? (\r\n                <div\r\n                    style={{\r\n                        textAlign: 'center',\r\n                        marginTop: 12,\r\n                        height: 32,\r\n                        lineHeight: '32px',\r\n                    }}\r\n                >\r\n                    <Button onClick={this.onLoadMore}>loading more</Button>\r\n                </div>\r\n            ) : null;\r\n\r\n        return (\r\n            <List\r\n                className=\"demo-loadmore-list\"\r\n                loading={initLoading}\r\n                itemLayout=\"horizontal\"\r\n                loadMore={loadMore}\r\n                dataSource={list}\r\n                renderItem={item => (\r\n                    <List.Item\r\n                        actions={[<a key=\"list-loadmore-edit\">edit</a>, <a key=\"list-loadmore-more\">more</a>, <a key=\"list-loadmore-more\">more</a>]}\r\n                    >\r\n                        <Skeleton avatar title={false} loading={item.loading} active>\r\n                            <img style={{ height: '80px' }} src={`http://localhost:5000/${item.thumbnail}`} />\r\n                            <List.Item.Meta\r\n\r\n                                title={<a href=\"https://ant.design\">{item.title}</a>}\r\n                                description={item.description}\r\n                            />\r\n                            <div className=\"list-date\">2021년 07월 18일</div>\r\n                            <div className=\"list-view-count\">조회: 182</div>\r\n                        </Skeleton>\r\n                    </List.Item>\r\n                )}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoadMoreList","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { FaCode } from \"react-icons/fa\";\r\nimport { Popconfirm, Card, Icon, Avatar, Col, Typography, Row, Table, Button } from \"antd\";\r\nimport CardBox from '../../CardBox'\r\nimport ModalButton from '../../ModalButton'\r\nimport { myInfo } from '../../../_actions/user_actions'; //엑션가져왔거든요?네넹 어케뿌려줘요?\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport LoadMoreList from './LoadMoreList'\r\n\r\nimport './index.css'\r\n\r\nimport moment from \"moment\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Title } = Typography;\r\nconst { Meta } = Card;\r\n\r\n\r\nconst videoUpdate = () => {\r\n    console.log(2)\r\n}\r\n\r\n// 비디오 삭제\r\nfunction videoDelete(id) {\r\n    Axios.delete('/api/video/videos/' + id)\r\n        .then(response => {\r\n            if (response.data.success) {\r\n                alert(\"삭제 성공\")\r\n            } else {\r\n                alert(\"삭제 실패 하였습니다.\")\r\n            }\r\n        })\r\n}\r\n\r\nconst videoUpdateData = (\r\n    <div>\r\n        <h2>데이트를 수정하세요</h2>\r\n    </div>\r\n)\r\n\r\nconst videoDeleteData = (\r\n    <div>\r\n        <p>삭제 후 영상은 복구 할 수 없습니다.</p>\r\n    </div>\r\n)\r\n\r\n\r\nfunction MyPage() {\r\n    const user = useSelector(state => state.user)\r\n    // const [TableData, setTableData] = useState([])\r\n    const [MySubscribeCount, setMySubscribeCount] = useState(0)\r\n    const [Video, setVideo] = useState([])\r\n    const [Page, setPage] = useState(1)\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n\r\n        console.log(\"user.myInfo\")\r\n        console.log(user)\r\n        const subscriptionVariables = {\r\n            userTo: localStorage.getItem('userId')\r\n        }\r\n        // ㄴㄴ이렇게할려다가\r\n        //         Axios.post('/api/subscribe/subscribeNumber', subscriptionVariables)\r\n        //             .then(response => {\r\n        //                 if(response.data.success) {\r\n        //                     setMySubscribeCount(response.data.subscribeNumber);\r\n        //                 } else {\r\n        //                     alert(\"구독자 수 를 받아오지 못했습니다.\")\r\n        //                 }\r\n        //             })\r\n    }, [])\r\n\r\n    // useEffect(() => {\r\n    //     Axios.get('/api/video/getMyVideos')\r\n    //         .then(response => {\r\n    //             if (response.data.success) {\r\n    //                 console.log(response.data.videos);\r\n\r\n    //                 // 테이블 데이터로 가공\r\n    //                 let tableTemp = response.data.videos; // 비디오 데이터 가공전\r\n    //                 tableTemp.map((row, index) => {\r\n    //                     row.key = index\r\n    //                     row.button = (\r\n    //                         <div>\r\n    //                             <ModalButton modalData=\"테스트입니다.\" onOk={videoUpdate}>수정</ModalButton>\r\n    //                             <ModalButton title=\"영상을 삭제하시겠습니까?\" modalData={videoDeleteData} onOk={(e) => { videoDelete(row._id) }}>삭제</ModalButton>\r\n\r\n    //                         </div>\r\n    //                     )\r\n    //                 })\r\n    //                 setTableData(response.data.videos);\r\n    //             } else {\r\n    //                 alert(\"비디오 가져오기 실패\")\r\n    //             }\r\n    //         })\r\n    // }, [])\r\n\r\n    return (\r\n        <div style={{ width: \"100%\", padding: \"2rem 2rem\" }}>\r\n            <div className=\"myPageTop\">\r\n                <Row gutter={[32, 16]} type=\"flex\" justify=\"space-between\">\r\n                    <Col lg={16}>\r\n                        <CardBox title=\"프로필\">\r\n                            <Meta\r\n                                avatar={<Avatar src={localStorage.getItem(\"userImage\")} />}\r\n                                title={localStorage.getItem(\"userFullName\")}\r\n                                description={\"반갑습니다.\"}\r\n                            />\r\n                            <hr />\r\n                            <br />\r\n                            <p>구독자 : {}명</p>\r\n                            <p>회원가입 날짜 : {moment(myInfo.user_date).format(\"YYYY년 MM월 DD일\")}</p>\r\n                            <p>내 영상 : {user.myInfo && user.myInfo.subscribeNumber}개</p>\r\n                        </CardBox>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                        <CardBox title=\"미정입니다\">\r\n                            프로필 공간입니다.\r\n                        </CardBox>\r\n                    </Col>\r\n                    <Col lg={24} sm={24} md={24} xs={24}>\r\n                        <CardBox title=\"내 영상\">\r\n                            {/* <Table columns={columns} dataSource={TableData} scroll={{ y: 240 }} /> */}\r\n                            <div className=\"myVideoHead\">\r\n                                <li>\r\n                                    동영상\r\n                                </li>\r\n                                <li>\r\n                                    정보\r\n                                </li>\r\n                                <li>\r\n                                    업로드 날짜\r\n                                </li>\r\n                                <li>\r\n                                    조희수\r\n                                </li>\r\n                                <li>\r\n                                    관리\r\n                                </li>\r\n                            </div>\r\n                            <div className=\"myVideoBody\">\r\n                                <LoadMoreList count={4} />\r\n                            </div>\r\n                        </CardBox>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default (MyPage);\r\n","\r\nimport React, {useEffect, useState} from \"react\";\r\nimport { FaCode } from \"react-icons/fa\";\r\nimport { Card, Icon, Avatar, Col, Typography, Row } from \"antd\";\r\nimport Axios from \"axios\";\r\n\r\nimport moment from \"moment\"\r\n\r\nconst {Title} = Typography;\r\nconst {Meta} = Card;\r\n\r\nfunction SubscriptionPage() {\r\n    \r\n    const [Video, setVideo] = useState([])\r\n\r\n    useEffect(() => {\r\n\r\n        const subscriptionVariables = {\r\n            userFrom: localStorage.getItem('userId')\r\n        }\r\n\r\n        Axios.post('/api/video/getSubscriptionVideos', subscriptionVariables)\r\n        .then(response=>{\r\n            if(response.data.success) {\r\n                console.log(response.data.videos)\r\n                setVideo(response.data.videos);     \r\n          \r\n            } else {\r\n                alert(\"비디오 가져오기 실패\")\r\n            }\r\n        })\r\n    }, [])\r\n    \r\n    const renderCards = Video.map((video, index)=>{\r\n        var minutes = Math.floor(video.duration / 60);\r\n        var seconds = Math.floor(video.duration - minutes * 60);\r\n\r\n        return (\r\n            <Col lg={6} md={8} xs={24} key={index}>\r\n            <div style={{ position: \"relative\" }}>\r\n                <a href={`/video/${video._id}`}>\r\n                    <div style={{position: 'relative'}}>\r\n                        <img style={{ width: '100%' }} src={`http://localhost:5000/${video.thumbnail}`} />\r\n                        <div className=\"duration\">\r\n                            <span>{minutes} : {seconds}</span>\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n                <br/>\r\n                <Meta\r\n                    avatar={\r\n                        <Avatar src={video.writer.image}></Avatar>\r\n                    }    \r\n                    title={video.title}\r\n                    description=\"\"\r\n                />\r\n                <span>{video.writer.name}</span><br/>\r\n                <span style={{marginLeft:'3rem'}}>{video.views} views</span> - <span>{moment(video.createdAt).format(\"MMM Do YY\")}</span>\r\n            </div>\r\n          </Col>\r\n        )\r\n    })\r\n\r\n  return (\r\n    <div style={{ width: \"85%\", margin: \"3rem auto\" }}>\r\n      <Title level={2}>Recommended</Title>\r\n      <hr />\r\n      <Row gutter={(32, 16)}>\r\n        {renderCards}\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubscriptionPage;\r\n","import React, { useEffect } from 'react';\r\nimport { Menu } from 'antd';\r\nconst SubMenu = Menu.SubMenu;\r\nconst MenuItemGroup = Menu.ItemGroup;\r\n\r\nfunction LeftMenu(props) {\r\n\r\n  return (\r\n    \r\n    <Menu mode={props.mode} style={{ backgroundColor: 'transparent' }}>\r\n      <Menu.Item key=\"mail\">\r\n        <a href=\"/videos\">모든 영상</a>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"mail2\">\r\n        <a href=\"/subscription\">구독한 영상</a>\r\n      </Menu.Item>\r\n    </Menu>\r\n  )\r\n}\r\n\r\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Switch, Menu, Avatar, Dropdown } from 'antd';\r\nimport { VideoCameraFilled } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport { theme } from '../../../../_actions/preferences_actions';\r\nimport { USER_SERVER } from '../../../Config';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction RightMenu(props) {\r\n  const [isDarkMode, setIsDarkMode] = React.useState();\r\n  const { switcher, currentTheme, status, themes } = useThemeSwitcher();\r\n  const user = useSelector(state => state.user)\r\n\r\n\r\n  const isDrak = useSelector(state => state.preferences.darkThemeEnabled)\r\n  const dispatch = useDispatch();\r\n  //To know my current status, send Auth request \r\n\r\n\r\n  const [UserImage, setUserImage] = useState('')\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(user.userData)\r\n    if (user.userData !== undefined) {\r\n      setUserImage(user.userData.image)\r\n    }\r\n\r\n  }, [user])\r\n\r\n\r\n\r\n  const toggleTheme = (isChecked) => {\r\n\r\n    dispatch(theme())\r\n    // console.log(useSelector(state => state.preferences.darkThemeEnabled))\r\n    setIsDarkMode(isChecked);\r\n    switcher({ theme: isChecked ? themes.dark : themes.light });\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    axios.get(`${USER_SERVER}/logout`).then(response => {\r\n      if (response.status === 200) {\r\n        props.history.push(\"/login\");\r\n      } else {\r\n        alert('Log Out Failed')\r\n      }\r\n    });\r\n  };\r\n\r\n  if (user.userData && !user.userData.isAuth) {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"mail\">\r\n          <a href=\"/login\">Signin</a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\">\r\n          <a href=\"/register\">Signup</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n  } else if((user.userData && user.userData.isAuth)) {\r\n    return (\r\n      <>\r\n        {/* <Switch checked={isDarkMode} onChange={toggleTheme} /> */}\r\n        <Menu theme={props.theme} mode={props.mode}>\r\n          <Menu.Item key=\"upload\">\r\n            <Link to=\"/video/upload\"><VideoCameraFilled /> 비디오 업로드</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"logout\">\r\n            <a onClick={logoutHandler}>Logout</a>\r\n          </Menu.Item>\r\n        </Menu>\r\n        <Dropdown overlay={avatarMenu}>\r\n          <Avatar src={UserImage}></Avatar>\r\n        </Dropdown>\r\n      </>\r\n    )\r\n  } else {\r\n    return(\r\n      <span>로딩중</span>\r\n    )\r\n  }\r\n}\r\n\r\nconst avatarMenu = (\r\n  <Menu>\r\n    <Menu.Item><Link to=\"/mypage\"></Link>내 영상</Menu.Item>\r\n  </Menu>\r\n)\r\n\r\nexport default withRouter(RightMenu);\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Input, Form } from 'antd';\r\nimport { useHistory, withRouter } from \"react-router-dom\";\r\nimport queryString from \"query-string\";\r\nconst { Search } = Input\r\nfunction SearchBox({ match, location }) {\r\n\r\n    const [SearchValue, setSearchValue] = useState('');\r\n    let search_query = queryString.parse(location.search); // 검색어\r\n    search_query = search_query.search_query;\r\n\r\n    useEffect(() => {\r\n        setSearchValue(search_query)\r\n    }, [])\r\n\r\n    const onSearch = (event) => {\r\n        window.location.href = \"/videos?search_query=\" + SearchValue;\r\n    }\r\n    const onChangeSearchValue = (e) => {\r\n        setSearchValue(e.target.value)\r\n    }\r\n    return (\r\n        <>\r\n            <Search\r\n                onSearch={onSearch}\r\n                className=\"searchBox\"\r\n                placeholder=\"검색어를 입력하세요...\"\r\n                // loading\r\n                onChange={onChangeSearchValue}\r\n                value={SearchValue}\r\n                enterButton\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(SearchBox)\r\n","import React, { useState, useEffect } from 'react';\r\nimport LeftMenu from './Sections/LeftMenu';\r\nimport RightMenu from './Sections/RightMenu';\r\nimport SearchBox from './Sections/SearchBox';\r\nimport { theme } from '../../../_actions/preferences_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Drawer, Button } from 'antd';\r\nimport { AlignRightOutlined } from '@ant-design/icons';\r\nimport './Sections/Navbar.css';\r\n\r\n\r\nfunction NavBar() {\r\n  const [visible, setVisible] = useState(false)\r\n  const user = useSelector(state => state.user)\r\n  const isDrak = useSelector(state => state.preferences.darkThemeEnabled)\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    //To know my current status, send Auth request \r\n\r\n  }, [])\r\n\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true)\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisible(false)\r\n  };\r\n\r\n  return (\r\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%', backgroundColor: (isDrak ? '#202020' : '#fff') }}>\r\n      <div className=\"menu__logo\">\r\n        <a href=\"/videos\"><img width=\"30px\" src=\"/images/logo.png\" /></a>\r\n      </div>\r\n      <div className=\"menu__container\">\r\n        <div className=\"menu_left\">\r\n          <LeftMenu mode=\"horizontal\" />\r\n        </div>\r\n        <SearchBox style={{ maxWidth: '400px' }} />\r\n\r\n        <div className={'menu_rigth ' + (user.userData && user.userData.isAuth && 'auth')} >\r\n          <RightMenu mode=\"horizontal\" />\r\n        </div>\r\n\r\n        <Button\r\n          className=\"menu__mobile-button\"\r\n          type=\"primary\"\r\n          onClick={showDrawer}\r\n        >\r\n          <AlignRightOutlined />\r\n        </Button>\r\n        <Drawer\r\n          title=\"메뉴\"\r\n          placement=\"right\"\r\n          className=\"menu_drawer\"\r\n          closable={false}\r\n          onClose={onClose}\r\n          visible={visible}\r\n          // bodyStyle={{ backgroundColor: \"#001529\", padding: \"0\" }}\r\n          // headerStyle={{ backgroundColor: \"#001529\", padding: \"0\" }}\r\n          drawerStyle={{ backgroundColor: \"#001529\", padding: \"0\" }}\r\n        >\r\n          <LeftMenu mode=\"inline\" />\r\n          <RightMenu mode=\"inline\" />\r\n        </Drawer>\r\n      </div>\r\n    </nav >\r\n  )\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\n// import {Icon} from 'antd';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div style={{\r\n            height: '80px', display: 'flex',\r\n            flexDirection: 'column', alignItems: 'center',\r\n            justifyContent: 'center', fontSize:'1rem'\r\n        }}>\r\n           <p> Happy Coding </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState, useEffect, Suspense, Children } from 'react';\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\n// pages for this product\r\n\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport Footer from \"../Footer/Footer\"\r\nimport Axios from 'axios';\r\n\r\n\r\nimport { Layout, Menu, Breadcrumb } from 'antd'\r\nimport { UserOutlined, LaptopOutlined, NotificationOutlined, HomeFilled } from '@ant-design/icons';\r\n\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider } = Layout;\r\n\r\n//null   Anyone Can go inside\r\n//true   only logged in user can go inside\r\n//false  logged in user can't go inside\r\n\r\nfunction LayoutIndex(props) {\r\n  const [SubscribeInfos, setSubscribeInfos] = useState([])\r\n  useEffect(() => {\r\n\r\n    const subscriptionVariables = {\r\n      userFrom: localStorage.getItem('userId')\r\n    }\r\n\r\n    Axios.post('/api/subscribe/subscribeInfo', subscriptionVariables)\r\n      .then(response => {\r\n        if (response.data.success) {\r\n          console.log(response.data.users)\r\n          setSubscribeInfos(response.data.users)\r\n        } else {\r\n          alert('구독한 정보를 받아오지 못했습니다.')\r\n        }\r\n      })\r\n  }, [])\r\n  return (\r\n\r\n    <Suspense fallback={(<div>Loading...</div>)}>\r\n      <Layout>\r\n        <NavBar />\r\n        <Sider width={200} className=\"site-layout-background\" style={{\r\n\r\n          overflow: 'auto',\r\n          height: '100vh',\r\n          position: 'fixed',\r\n          left: 0,\r\n\r\n          paddingTop: '52px', minHeight: 'calc(100vh - 80px)'\r\n        }}>\r\n          <Menu\r\n            mode=\"inline\"\r\n            defaultSelectedKeys={['1']}\r\n            defaultOpenKeys={['sub1']}\r\n            style={{ height: '100%', borderRight: 0 }}\r\n          >\r\n            <Menu.Item icon={<HomeFilled />} key=\"1\">홈</Menu.Item>\r\n            <SubMenu key=\"sub2\" icon={<LaptopOutlined />} title=\"구독한 정튜버\">\r\n              {\r\n                SubscribeInfos.map((user, index) => {\r\n                  return (\r\n                    <Menu.Item key={index}>{user.name}</Menu.Item>\r\n                  )\r\n                }\r\n                )\r\n              }\r\n\r\n            </SubMenu>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout style={{ padding: '52px 0px 24px', minHeight: 'calc(100vh - 80px)', marginLeft: '200px' }}>\r\n          <Content\r\n            className=\"site-layout-background\"\r\n            style={{\r\n              padding: 0,\r\n              margin: 0,\r\n              minHeight: 280,\r\n            }}\r\n          >\r\n            {props.children}\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n\r\n      <Footer />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default withRouter(LayoutIndex);\r\n","import React, { PureComponent } from 'react';\r\nimport { Route,  withRouter } from 'react-router-dom';\r\n\r\nimport LayoutIndex from './views/Layout/Layout';\r\n\r\n\r\nclass CustomRoute extends PureComponent {\r\n\r\n\r\n  render() {\r\n      const { component: Component, layout, ...rest  } = this.props;\r\n    console.log(rest)\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props => {\r\n          return  (\r\n            layout ?\r\n            <LayoutIndex>\r\n              <Component {...props} />\r\n            </LayoutIndex>\r\n            :\r\n            <Component {...props} />\r\n          ) \r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nCustomRoute.defaultProps = {\r\n  layout : true\r\n}\r\nexport default withRouter(CustomRoute);\r\n\r\n","import React, { Suspense } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../hoc/auth\";\r\n// pages for this product\r\nimport LandingPage from \"./views/LandingPage/LandingPage\";\r\nimport VideoPage from \"./views/VideoPage/VideoPage.js\";\r\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\r\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\r\nimport VideoUploadPage from \"./views/VideoUploadPage/VideoUploadPage.js\"\r\nimport VideoDetailPage from \"./views/VideoDetailPage/VideoDetailPage.js\"\r\nimport MyPage from \"./views/MyPage/MyPage.js\"\r\nimport SubscriptionPage from \"./views/SubscriptionPage/SubscriptionPage\"\r\nimport CustomRoute from \"./custom-route\";\r\nimport 'antd/dist/antd.css';\r\nimport { Layout, Menu, Breadcrumb } from 'antd'\r\nimport { UserOutlined, LaptopOutlined, NotificationOutlined, HomeFilled } from '@ant-design/icons';\r\n\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header, Content, Sider } = Layout;\r\n\r\n//null   Anyone Can go inside\r\n//true   only logged in user can go inside\r\n//false  logged in user can't go inside\r\n\r\n/*\r\n* CustomRoute 레이아웃 유무\r\n* parem layout\r\n* 사용 layout={true}\r\n* 사용안함 layout={false}\r\n*/\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Switch>\r\n              <CustomRoute exact path=\"/\" component={Auth(LandingPage, null)} layout={false} />\r\n              <CustomRoute exact path=\"/videos\" component={Auth(VideoPage, null)} />\r\n              <CustomRoute exact path=\"/login\" component={Auth(LoginPage, false)} />\r\n              <CustomRoute exact path=\"/register\" component={Auth(RegisterPage, false)} />\r\n              <CustomRoute exact path=\"/video/upload\" component={Auth(VideoUploadPage, true)} />\r\n              <CustomRoute exact path=\"/mypage\" component={Auth(MyPage, true)} />\r\n              <CustomRoute exact path=\"/video/:videoId\" component={Auth(VideoDetailPage, null)} />\r\n              <CustomRoute exact path=\"/subscription\" component={Auth(SubscriptionPage, null)} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport user from './user_reducer';\r\nimport preferences  from './preferences_reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    user,\r\n    preferences\r\n});\r\n\r\nexport default rootReducer;","import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n    MY_INFO\r\n} from '../_actions/types';\r\n\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case REGISTER_USER:\r\n            return { ...state, register: action.payload }\r\n        case LOGIN_USER:\r\n            return { ...state, loginSucces: action.payload }\r\n        case AUTH_USER:\r\n            return { ...state, userData: action.payload }\r\n        case LOGOUT_USER:\r\n            return { ...state }\r\n        case MY_INFO:\r\n            return { ...state, myInfo: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    THEME_DATA,\r\n\r\n} from '../_actions/types';\r\n\r\n\r\nexport default function (state = { darkThemeEnabled: false }, action) {\r\n    switch (action.type) {\r\n        case THEME_DATA:\r\n            return { ...state, darkThemeEnabled: !state.darkThemeEnabled }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'core-js';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport Reducer from './_reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\r\n\r\nconst themes = {\r\n    dark: ``,\r\n    light: ``,\r\n};\r\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider\r\n        store={createStoreWithMiddleware(\r\n            Reducer,\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )}\r\n    >\r\n        <BrowserRouter>\r\n            <ThemeSwitcherProvider themeMap={themes} defaultTheme=\"light\">\r\n                <App />\r\n\r\n            </ThemeSwitcherProvider>\r\n        </BrowserRouter>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}